<?php 
module_load_include('inc','mksearch','mksearch.themes');
/// ==================================
function mksearch_menu(){
	return array(
		// автокомплит для форм поиска 
		'getsearchvitrs'=>array(
			'type'=>MENU_CALLBACK,
			'access arguments'=>array('search content'),
			'page callback'=>'vitrfinder_cb',
			'file'=>'mksearch.callbacks.inc',
		),
		// подгрузка результатов .. 
		'get-next-page-search'=>array(
			'type'=>MENU_CALLBACK,
			'access arguments'=>array('search content'),
			'page callback'=>'GetNextpageSearch_jscb',
			'delivery callback'=>'ajax_deliver',
			'file'=>'mksearch.callbacks.inc',
		),
	);
}


// ==================================
/**
 * получить данные по поиску
 * @param string   $ss Стока поиска .. (поисковый запрос)
 * @param  integer $ce количество элементов на странице
 * @return array      список найденных нод 
 */
function _getproductslist(string $ss,int $ce=0)
{

	$pp=variable_get('default_nodes_main',10);

	$res=db_select('node','n');//
	if (!$ce)// нужен пагинатор ..
		$res=$res->extend('PagerDefault');
	drupal_add_js(array('search-string'=>$ss),'setting');
	//$res=$res->extend('PagerDefault');
	$res->condition('n.status',1);
	$res->condition('n.type','product_display');
	//$res->leftjoin('search_index','i','i.sid=n.nid and i.type=\'node\'');
	
	//dsm(search_index_split($ss));
	//foreach(search_index_split($ss) as $w)
	//	$or->condition('i.word',$w);
	// прикрутить товар искать в заголовке .. 
	//$res->leftjoin('field_data_field_product_variations','p','p.entity_id=n.nid and p.bundle=n.type');
	///$res->leftjoin('commerce_product','cp','cp.product_id=p.field_product_variations_product_id');
	
	
	foreach(array_map('trim',explode(' ',$ss)) as $w)
		$res->condition('n.title','%'.db_like($w).'%','like');
		//$or->condition('cp.sku','%'.db_like($w).'%','like');
	//$or->condition($and);
	

	
	//$res->condition($or);
	//$res->limit(20);
	// доставть артикул если надо ... 
	//dfb(intval($ss),'$ss');
	//$res->orderBy('cp.product_id='.intval($ss),'desc');
	// поиск по заголовку витрины должен быть первым 
	//$res->orderBy('n.title=\''.addslashes($ss).'\'','desc');
	// обычный приск по части фразы 
	//$res->orderBy('i.score','desc');

	$res->groupBy('n.nid');
	// показываем первую страницу с пагинатором .. 
	if (!$ce)// нужен пагинатор 
		$res->limit($pp);
	else
		$res->range($ce,$pp);


	$res->fields('n',array('nid'));
	//$res->addExpression('count(*)');
	$res=$res->execute()->fetchCol();
	//dsm($res);
	return $res; 
}

/// ===================================
function mksearch_search_info()
{
	return [
		'title'=>'Товары',
		'path'=>'products',
	];
}
// ===========================================
function mksearch_search_status(){
	// посчитаем товары (витрины) 
	$res=db_select('node','n');
	$res->condition('n.status',1);
	$res->condition('n.type','product_display');
	$res->addExpression('count(*)');
	$rem=clone $res;
	
	$total=$res->execute()->fetchField();
	$rem->leftjoin('search_dataset','s','s.type=\'node\' and s.sid=n.nid');
	$or=db_or();
	$or->condition('s.reindex',0,'!=');
	$or->isNull('s.sid');
	$rem->condition($or);
	$rem=$rem->execute()->fetchField();
	
	return array(
		'remaining'=>$rem,
		'total'=>$total,
	);
}
// ===========================================
// сброс индекса 
function mksearch_search_reset(){
	node_search_reset();
}
/// =================================
function mksearch_update_index(){
	$limit = (int) variable_get('search_cron_limit', 100);

	$res=db_select('node','n');
	$res->condition('n.status',1);
	$res->condition('n.type','product_display');
	$res->leftjoin('search_dataset','s','s.type=\'node\' and s.sid=n.nid');
	$or=db_or();
	$or->condition('s.reindex',0,'!=');
	$or->isNull('s.sid');
	$res->condition($or);
	$res->range(0,$limit);
	$res->fields('n',array('nid'));
	$res=$res->execute()->fetchAll();
	foreach ($res as $node) 
		_node_index_node($node);
}
// =======================================================
// поиск ... 
function mksearch_search_execute($keys=null,$conditions=null)
{
	global $pager_total_items;
	$res=_getproductslist($keys);
	$ss=&drupal_static('search-query');
	$ss=$keys;
	
	switch($pager_total_items[0]){
		case 0:
			return [];
		// в случае если нашли один товар . сраз переход на него ..
		case 1:
			drupal_goto('node/'.reset($res));
	}
	
	// все остальные случаи  .. 
	$nn=node_view_multiple(node_load_multiple($res));
	$nn=$nn['nodes'];

	foreach($res as $x=>$y)
		$res[$x]=[
			'link'=>'node/'.$y,
			'nid'=>$y,
			'title'=>$y,
			'res'=>$nn[$y],
		];
	
	
	//$res=node_view_multiple(node_load_multiple($res));
	// /dsm($res,'$res load');
	return  $res;// //;
}
// ======================================================
function mksearch_preprocess_search_results(&$vars)
{
	global $pager_total_items,$pager_page_array,$pager_total;


	$vars['lotalloaded']=$pager_total_items[0]??0;
	$vars['perpage']=variable_get('default_nodes_main',10);
	$pparams=drupal_get_query_parameters();
	$vars['placebutton']=$pager_total[0]-1>$pager_page_array[0];

	if ($vars['placebutton']){
		drupal_add_library('mklibs','contentuploader');
		drupal_add_js([
			'pageruploader'=>[
				'loadfrom'=>url('get-next-page-search'),
				'data'=>[
					'curpage'=>$pparams['page']??0,
					'total'=>$pager_total_items[0],
					'perpage'=>variable_get('default_nodes_main',10),
					'ss'=>drupal_static('search-query'),
				],
			]
		],'setting');
	}
	
}
// ===================================================
function mksearch_form_alter(&$form,$form_state,$form_id){

	return;
	if ($form_id=='search_form'){
		$form['basic']['keys']['#attributes']['data-countel']=15;
		$form['basic']['keys']['#attributes']['class'][]='autocompleter-todo';
		$form['basic']['keys']['#attached']['library'][]=array('mkmod','jqautocompleter');
	}
	if($form_id=='search_block_form'){
		$form['search_block_form']['#attributes']['data-countel']=5;
		$form['search_block_form']['#attributes']['class'][]='autocompleter-todo';
		$form['search_block_form']['#attached']['library'][]=array('mkmod','jqautocompleter');
	}
	//	dsm($form);
	//dsm($form_id);
}
